<?xml version="1.0"?>
<!-- 
/*
 ***** BEGIN LICENSE BLOCK *****
 * This file is part of FiltaQuilla, Custom Filter Actions, by Mesquilla.
 *
 * FiltaQuilla is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * You should have received a copy of the GNU General Public License
 * along with FiltaQuilla.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is FiltaQuilla code.
 *
 * The Initial Developer of the Original Code is
 * Kent James <rkent@mesquilla.com>
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * ***** END LICENSE BLOCK *****
 */
-->
<bindings   id="mailingListFilterBindings"
            xmlns="http://www.mozilla.org/xbl"
            xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
            xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- search term bindings -->

  <binding id="mailingListBinding">
    <resources>
      <stylesheet src="chrome://mailing-list-filter/skin/mailing-list-filter.css"/>
    </resources>
    <content>
      <xul:menulist flex="1" class="search-value-menulist" xbl:inherits="disabled"
                    oncommand="this.parentNode.setAttribute('value', this.value);this.parentNode.value=this.value">
        <xul:menupopup class="search-value-popup" />
      </xul:menulist> 
    </content>
    <implementation>
      <method name="addDirectories">
        <parameter name="aDirEnum"/>
        <parameter name="aMenupopup"/>
        <body>
          <![CDATA[
            while (aDirEnum.hasMoreElements()) {
              let dir = aDirEnum.getNext();
              if (dir instanceof Components.interfaces.nsIAbDirectory)
              {
                // get children
                let newMenuItem = document.createElement('menuitem');
                let displayLabel = dir.dirName;
                if (dir.isMailList)
                  displayLabel = "--" + displayLabel;
                newMenuItem.setAttribute('label', displayLabel);
                newMenuItem.setAttribute('value', dir.URI);
                aMenupopup.appendChild(newMenuItem);
                // recursive add of child mailing lists
                let childNodes = dir.childNodes;
                if (childNodes && childNodes.hasMoreElements())
                  this.addDirectories(childNodes, aMenupopup);
              }
            }
          ]]>
        </body>
      </method>
      <constructor>
        <![CDATA[
          let menulist = document.getAnonymousNodes(this)[0];
          let value = this.getAttribute("value");
          let menupopup = menulist.menupopup;

          // set the default to the personal address book
          if (!value || !value.length)
            value = "moz-abmdbdirectory://abook.mab";

          // recursively add all address books and email lists
          let abManager = Components.classes["@mozilla.org/abmanager;1"]
                                    .getService(Components.interfaces.nsIAbManager);
          this.addDirectories(abManager.directories, menupopup);

          // scan all menupopup items to find the uri for the selection
          let valueElements = menupopup.getElementsByAttribute('value', value);
          if (valueElements && valueElements.length)
            menulist.selectedItem = valueElements[0];
          else
            menulist.selectedIndex = 0;

          this.value = menulist.selectedItem.getAttribute("value");
        ]]>
      </constructor>
    </implementation>
  </binding>

</bindings>
